;; -----------------------------------------
;; MAIN LOOP setup
;; -----------------------------------------

to setup
  clear-all
  print date-and-time
  ;;sr:setup
 ; profiler:start 
  
  show "Building parameter dictionaries..."
  
  ; if from-r? != TRUE [set from-r? FALSE]

  set world-size count patches
  set patch-grain 20
  set n-states 11

  set record-tag ""

  set rnd-seed new-seed

  set colour-dict table:from-list [
    ["gr" 19]
    ["d-sh" 38]
    ["m-sh" 34]
    ["ksh-k" 27]
    ["yf-k" 24]
    ["ksh-nok" 107]
    ["yf-nok" 104]
    ["old-f" 63]
    ["ksh-p" 88]
    ["yf-p" 85]
    ["old-p" 83]
  ]
  
  set class-list n-values n-states [ i -> i ]
  set class-names-list (list "gr" "d-sh" "m-sh" "ksh-k" "yf-k" "ksh-nok" "yf-nok" "old-f" "ksh-p" "yf-p" "old-p")
  set forest-classes-list (list "yf-k" "yf-nok" "old-f" "yf-p" "old-p")
  set forest-idx-list (list 4 6 7 9 10)

  ;; load dictionaries (NL tables) from csv files
  set flammability-dict table:from-list csv:from-file "parameter_files/flammability_table.dat"
  set base-changes-dict table:from-list csv:from-file "parameter_files/base_changes_table.dat"
  set rust-susc-dict table:from-list csv:from-file "parameter_files/rust_table.dat"
  set phy-susc-dict table:from-list csv:from-file "parameter_files/kaurimate_table.dat"
  
  ;; Load other parameter files
  load-aux-parameters
  
  ;; Set up the transition matrices for seedling/sapling dynamics -> ROW wise
  set tr-mtx-bank-yfor (list [0.8 0] [0.05 0.9])    ;; transitions from 1.5m -> 5 cm dbh individuals in yng forest
  set tr-mtx-bank-ofor (list [0.8 0] [0.05 0.9])    ;; ... and old forest
  
  ;; Set up fire history 
  set fire-record []
  set fire-stats []
  set fire-size-list []
  set fire-year []
  set beyond-flamm-time 99999

  ;; Setup clamate, ENSO, ...
  show "Setting up ENSO dynamics..."
  set enso-record []
  init-enso

  ;; Building terrain
  show "Building terrain..."
  build-topo-landscape
  
  ;; Build the landscape using the MRC code...
  show "Building initial vegetation landscape..."
  build-veg-landscape
  
;  profiler:stop          ;; stop profiling
;  print profiler:report  ;; view the results
;  profiler:reset
  
  reset-ticks
end


to load-aux-parameters
  ;; succession weighst for landsacpe variables
  let X map but-first (csv:from-file "parameter_files/lsp_succ_weights.dat")
  
  set succ-tpi-wgt item 0 X
  set succ-aspect-wgt item 1 X
  
  ;; general parameters for curves etc.
  set aux-params-dict csv:from-file "parameter_files/aux_parameters.dat" 
  set aux-params-dict table:from-list aux-params-dict
  
  ;; fire wind and slope modifiers
  ;; we strip off the title so it is a list of numeric lists
  set X map but-first (csv:from-file "parameter_files/fire_weights.dat")
  
  set flamm-wind-wgt sublist X 0 3 ;; upper is exclusive
  set flamm-slope-wgt item 3 X
  set flamm-slope-breaks item 4 X
  set flamm-aspect-wgt item 5 X
  set enso-freq-wgt-list item 6 X
    
end

;; set-up the topography etc.
to build-topo-landscape
  
  if terrain-type = "flat"
  [
    ask patches
    [
      set slope 0
      set elevation 0
      set aspect -1
      set TPI -1
      set TWI -1
    ]
  ]
  
  if terrain-type = "ridge-gully"  
  [
    build-catena
  ]
  
end

;; drive the MRC landscape building etc.
to build-veg-landscape
  set clusters []

  set sum-stalled (list 0 0)
  set sum-changes (list 0 0)
  
  ;; set up the MRC landscape
  show "Building starting landscape (MRC)..."
  init-patch-mrc-variables
  
  ;; forest in gully check
  if forest-gully-cover > 0 and terrain-type = "ridge-gully" 
  [
    show "Checking forest cover..."
    forest-composition-check
  ]
  
  ;; Build the modifed rnd clusters landscape
  setup-mrc true false ;; args:: remove-singleton-patches? sequentially-assign-clusters?
  
  ask patches [set class item class class-names-list]
  
  ;; adds forest patch to gullies (preferentially if requested)
  if forest-gully-cover > 0 and terrain-type = "ridge-gully"
  [
    show "Adding forest in gullies..."
    build-gully-forest
  ]
    
  show "Building starting landscape (ageing via cluster id, etc.)..."
  init-patches
  find-clusters
  id-clusters
  if forest-gully-cover > 0 [ tag-gully-forest ]
  age-by-cluster
  
  ;; Ensure that there are no cells in the 'invaded' state if invasion is false
  if invasion? = false
  [
    ask patches with [class = "d-sh"] [set class "m-sh"]
  ]
  
  show "Tweaking starting landscape (coastal & farmland)..."
  starting-coastal-forest
  if farm-edge? [edge-farmland]
  
  update-abundances
  colour-by-class
  
end

;; initialise the patch fire and regen history
to init-patches

  ask patches
  [
    set times-change 0
    set flammability table:get flammability-dict class
    set burned? false
    set regenbank-yfor (list 0 0)
    set regenbank-ofor (list 0 0)
    
    set fire-history []
    set next-change table:get base-changes-dict class
    set t-colonised (list -1 -1)
    set prev-class class
    
    set distance-to-coast pxcor * patch-grain
    set farm-node? false
    
    set myrtle-rust? false
    set kauri-mate? false
    set kauri-mate-nhb other patches in-radius phy-radius-inf
  ]
    
end

;; Check that forest cover is correct if forest-gully-cover is set
;; we use the input files as the desired and modify cover to get that

